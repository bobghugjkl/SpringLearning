<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.xxxx.springmvc.controller"/>

    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter" />
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven>


    <!--配置视图解析器  默认的视图解析器- -->
    <bean id="defaultViewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="contentType" value="text/html" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!--
       拦截器生效配置方式01
    -->
   <!-- <mvc:interceptors>
        &lt;!&ndash;
           拦截所有的Handler
        &ndash;&gt;
        <bean class="com.xxxx.springmvc.interceptors.MyInterceptor1"></bean>
    </mvc:interceptors>-->

    <!--
       拦截器生效配置方式02   推荐使用该配置
    -->
    <!--<mvc:interceptors>
        <mvc:interceptor>
            &lt;!&ndash;
               mvc:mapping  配置拦截器拦截的资源  支持通配符 可以配置多个
               mvc:exclude-mapping 配置拦截器放行的资源  可以多个
            &ndash;&gt;
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/m01.do"/>
            <bean class="com.xxxx.springmvc.interceptors.MyInterceptor1"></bean>
        </mvc:interceptor>
    </mvc:interceptors>-->


   <!-- <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/hello.do"/>
            <mvc:exclude-mapping path="/m01.do"/>
            <mvc:exclude-mapping path="/m02.do"/>
            <bean class="com.xxxx.springmvc.interceptors.MyIntercetpor2"></bean>
        </mvc:interceptor>
    </mvc:interceptors>-->


  <!--  <mvc:interceptors>
        &lt;!&ndash;
           拦截器链(多个拦截器)
             先配置的拦截器preHandler 方法先执行 (重点理解)
             先配置的拦截器 postHandle 、afterCompletion 方法后执行(栈的元素出栈效果 )  了解
        &ndash;&gt;
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.xxxx.springmvc.interceptors.MyInterceptor1"></bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/hello.do"/>
            <mvc:exclude-mapping path="/m01.do"/>
            <mvc:exclude-mapping path="/m02.do"/>
            <bean class="com.xxxx.springmvc.interceptors.MyIntercetpor2"></bean>
        </mvc:interceptor>
    </mvc:interceptors>-->
    
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/user/login.do"/>
            <mvc:exclude-mapping path="/uploadFile.do"/>
            <bean class="com.xxxx.springmvc.interceptors.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>


    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize">
            <value>104857600</value>
        </property>
        <property name="maxInMemorySize">
            <value>4096</value>
        </property>
    </bean>
    
    
    




</beans>